# Usar una imagen base de Python
FROM python:3.9-slim

ARG port
# Variables de aplicacion
## Clave secreta para firmar los tokens
ENV SECRET_KEY='secretHash'
## Clave maestra secreta
ENV MASTER_KEY='Clave123'

# Instalar cron y dependencias de Python
RUN apt-get update && apt-get install -y \
    cron procps dos2unix \
    && pip install flask==3.0.3 PyJWT==2.9.0 requests==2.30 psutil==6.0.0 \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Establecer el directorio de trabajo dentro del contenedor
WORKDIR /app

# Copiar los archivos requeridos al contenedor
COPY app/assets/ /app/assets/
COPY app/main.py app/check_and_download.py app/apidoc.json app/index.html script.sh /app/

# Convertir el script a formato Unix y darle permisos de ejecución
RUN dos2unix /app/script.sh && chmod +x /app/script.sh

# Añadir las variables de entorno y configurar cron job en un solo comando RUN
RUN echo '*/5 * * * * /usr/local/bin/python /app/check_and_download.py >> /var/log/cron.log 2>&1' >> /etc/cron.d/script_update \
    && chmod 0644 /etc/cron.d/script_update \
    && crontab /etc/cron.d/script_update

# Exponer el puerto de la API (puedes cambiar $port por un número si es constante)
ENV FINAL_PORT=${port:-5000}
EXPOSE $FINAL_PORT

# Iniciar el servicio cron y la aplicación Flask
CMD ["sh", "-c", "cron && python main.py"]